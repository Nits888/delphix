
from flask import Flask, redirect, url_for, session, request
import requests
from keycloak import KeycloakOpenID

app = Flask(__name__)
app.secret_key = 'your_secret_key'  # Change this to a secure random value

# Keycloak setup
keycloak_openid = KeycloakOpenID(
    server_url="https://YOUR_KEYCLOAK_DOMAIN/auth/",
    client_id="YOUR_CLIENT_ID",
    realm_name="YOUR_REALM",
    client_secret_key="YOUR_CLIENT_SECRET",  # This can be None for public clients
)

# Fetch the .well-known configuration
well_known_url = f"https://YOUR_KEYCLOAK_DOMAIN/auth/realms/YOUR_REALM/.well-known/openid-configuration"
config_well_known = requests.get(well_known_url).json()

@app.route('/')
def home():
    user = session.get('user')
    if user:
        return f'Hello, {user["name"]}'
    else:
        return 'Not logged in'

@app.route('/login')
def login():
    redirect_uri = url_for('login_callback', _external=True)
    auth_url = keycloak_openid.auth_url(redirect_uri=redirect_uri)
    return redirect(auth_url)

@app.route('/login/callback')
def login_callback():
    code = request.args.get('code')
    token_response = keycloak_openid.token(code=code, redirect_uri=url_for('login_callback', _external=True))
    user_info = keycloak_openid.userinfo(token_response['access_token'])
    session['user'] = user_info
    return redirect('/')

@app.route('/logout')
def logout():
    session.pop('user', None)
    return redirect('/')

if __name__ == '__main__':
    app.run()
